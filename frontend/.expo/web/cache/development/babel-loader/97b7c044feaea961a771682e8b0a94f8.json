{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/arij/Mobile/VoiceUp/frontend/src/screens/RegisterScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { useFormik } from 'formik';\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailError = _useState8[0],\n      setEmailError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordError = _useState10[0],\n      setPasswordError = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nameError = _useState12[0],\n      setNameError = _useState12[1];\n\n  var validationSchema = function validationSchema(values) {\n    var emailError = emailValidator(values.email);\n    var passwordError = passwordValidator(values.password);\n    var nameError = nameValidator(values.name);\n\n    if (emailError || passwordError || nameError) {\n      setEmailError(emailError);\n      setPasswordError(passwordError);\n      setNameError(nameError);\n      return;\n    }\n\n    return 1;\n  };\n\n  var initialValues = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  var onSubmit = function onSubmit(values) {\n    console.log(values.name);\n    console.log(values.email);\n    console.log(values.password);\n    var k = validationSchema(values);\n\n    if (k == 1) {\n      console.log(\"values.email\");\n      var registered = {\n        name: values.name,\n        email: values.email,\n        password: values.password\n      };\n    }\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: onSubmit\n  });\n  var values = formik.values,\n      errors = formik.errors,\n      handleChange = formik.handleChange,\n      isSubmitting = formik.isSubmitting,\n      handleSubmit = formik.handleSubmit;\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Create Account\"), \" \", React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: values.name,\n    onChangeText: handleChange('name'),\n    error: !!nameError,\n    errorText: nameError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: values.email,\n    onChangeText: handleChange('email'),\n    error: !!emailError,\n    errorText: emailError,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: values.password,\n    onChangeText: handleChange('password'),\n    error: !!passwordError,\n    errorText: passwordError,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, \"signup\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/home/arij/Mobile/VoiceUp/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","useFormik","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","nameError","setNameError","validationSchema","values","initialValues","onSubmit","console","log","k","registered","formik","errors","handleChange","isSubmitting","handleSubmit","goBack","styles","row","replace","link","StyleSheet","create","flexDirection","marginTop","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { nameValidator } from '../helpers/nameValidator'\nimport {useFormik} from 'formik';\n\nexport default function RegisterScreen({ navigation }) {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [passwordError, setPasswordError] = useState('')\n  const [nameError, setNameError] = useState('')\n  const validationSchema = (values) => {\n    const emailError = emailValidator(values.email)\n    const passwordError = passwordValidator(values.password)\n    const nameError = nameValidator(values.name)\n    if (emailError || passwordError || nameError) {\n      setEmailError(emailError )\n      setPasswordError(passwordError )\n      setNameError(nameError)\n      return \n    }\n  return 1;\n}\nconst initialValues = {\n  name:'',\n  email: '',\n  password: '',\n};\nconst onSubmit = values => {\n  console.log(values.name);\n  console.log(values.email);\n  console.log(values.password);\n  const k=validationSchema(values);\n  if (k==1){\n    console.log(\"values.email\");\n    const registered = {\n      name:values.name,\n      email: values.email,\n      password: values.password,\n };\n    //signup(registered).then(     \n      //navigation.reset({\n      //  index: 0,\n       // routes: [{ name: 'Dashboard' }],\n      //})\n     // );\n  }\n\n};\n\nconst formik = useFormik({\n  initialValues,\n  onSubmit,\n});\nconst {\n  values,\n  errors,\n  handleChange,\n  isSubmitting,\n  handleSubmit,\n} = formik;\n\n  return (\n    <Background>\n    <BackButton goBack={navigation.goBack} />\n    <Logo />\n    <Header>Create Account</Header> <TextInput\n      label=\"Name\"\n      returnKeyType=\"next\"\n      value={values.name}\n      onChangeText={handleChange('name')}\n      error={!!nameError}\n      errorText={nameError}\n    />\n    <TextInput\n      label=\"Email\"\n      returnKeyType=\"next\"\n      value={values.email}\n      onChangeText={handleChange('email')}\n      error={!!emailError}\n      errorText={emailError}\n      autoCapitalize=\"none\"\n      autoCompleteType=\"email\"\n      textContentType=\"emailAddress\"\n      keyboardType=\"email-address\"\n    />\n    <TextInput\n      label=\"Password\"\n      returnKeyType=\"done\"\n      value={values.password}\n      onChangeText={handleChange('password')}\n      error={!!passwordError}\n      errorText={passwordError}\n      secureTextEntry\n    />\n    <Button mode=\"contained\" onPress={handleSubmit}>\n      signup\n    </Button>\n      <View style={styles.row}>\n        <Text>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}