{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport request from \"../utils/client.utils\";\nexport function register(login) {\n  var response;\n  return _regeneratorRuntime.async(function register$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(request({\n            method: 'POST',\n            url: 'user/add',\n            data: login,\n            headers: {\n              'Access-Control-Allow-Origin': true\n            }\n          }));\n\n        case 3:\n          response = _context.sent;\n          console.log(\"step1\");\n          console.log(response);\n          return _context.abrupt(\"return\", response);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0.response || _context.t0.message;\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n}\nexport function signin(login) {\n  var response;\n  return _regeneratorRuntime.async(function signin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(request({\n            method: 'POST',\n            url: 'user/loginUser',\n            data: login,\n            headers: {\n              'Access-Control-Allow-Origin': true\n            }\n          }));\n\n        case 3:\n          response = _context2.sent;\n          console.log(response);\n          return _context2.abrupt(\"return\", response);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          throw _context2.t0.response || _context2.t0.message;\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}","map":{"version":3,"sources":["C:/Users/Rania Dhahbi/Desktop/VoiceUp-nourhene/VoiceUp-nourhene/frontend/src/services/auth.services.js"],"names":["request","register","login","method","url","data","headers","response","console","log","message","signin"],"mappings":";AAAA,OAAOA,OAAP;AAGA,OAAO,SAAeC,QAAf,CAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEwBF,OAAO,CAAC;AAC3BG,YAAAA,MAAM,EAAE,MADmB;AAE3BC,YAAAA,GAAG,EAAE,UAFsB;AAG3BC,YAAAA,IAAI,EAAEH,KAHqB;AAI3BI,YAAAA,OAAO,EAAE;AAAE,6CAA+B;AAAjC;AAJkB,WAAD,CAF/B;;AAAA;AAEOC,UAAAA,QAFP;AAQCC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AATD,2CAUgBA,QAVhB;;AAAA;AAAA;AAAA;AAAA,gBAaQ,YAAMA,QAAN,IAAkB,YAAMG,OAbhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBP,OAAO,SAAeC,MAAf,CAAsBT,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGwBF,OAAO,CAAC;AAC3BG,YAAAA,MAAM,EAAE,MADmB;AAE3BC,YAAAA,GAAG,EAAE,gBAFsB;AAG3BC,YAAAA,IAAI,EAAEH,KAHqB;AAI3BI,YAAAA,OAAO,EAAE;AAAE,6CAA+B;AAAjC;AAJkB,WAAD,CAH/B;;AAAA;AAGOC,UAAAA,QAHP;AAUCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAVD,4CAWgBA,QAXhB;;AAAA;AAAA;AAAA;AAAA,gBAcQ,aAAMA,QAAN,IAAkB,aAAMG,OAdhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import request from '../utils/client.utils'\n\n//signUp\nexport async function register(login){\n    try {\n        const response = await request({\n            method: 'POST',\n            url: 'user/add',\n            data: login, \n            headers: { 'Access-Control-Allow-Origin': true },\n        })\n        console.log(\"step1\");\n        console.log(response);\n                return response\n\n    } catch (error) {\n        throw (error.response || error.message)\n    }\n}\nexport async function signin(login){\n    try{\n\n        const response = await request({\n            method: 'POST',\n            url: 'user/loginUser',\n            data: login, \n            headers: { 'Access-Control-Allow-Origin': true },\n\n        })\n        console.log(response);\n                return response\n\n    } catch (error) {\n        throw (error.response || error.message)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}