{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatmach/Documents/VoiceUp/frontend/src/screens/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { signin } from \"../services/auth.services\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailError = _useState6[0],\n      setEmailError = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordError = _useState8[0],\n      setPasswordError = _useState8[1];\n\n  var validationSchema = function validationSchema(values) {\n    var emailError = emailValidator(values.email);\n    var passwordError = passwordValidator(values.password);\n\n    if (emailError || passwordError) {\n      setEmailError(emailError);\n      setPasswordError(passwordError);\n      return;\n    }\n\n    return 1;\n  };\n\n  var initialValues = {\n    email: '',\n    password: ''\n  };\n\n  var onSubmit = function onSubmit(values) {\n    console.log(values.email);\n    console.log(values.password);\n    var k = validationSchema(values);\n\n    if (k == 1) {\n      console.log(\"values.email\");\n      var registered = {\n        email: values.email,\n        password: values.password\n      };\n      signin(registered).then(navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Dashboard'\n        }]\n      }));\n    }\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: onSubmit\n  });\n  var values = formik.values,\n      errors = formik.errors,\n      handleChange = formik.handleChange,\n      isSubmitting = formik.isSubmitting,\n      handleSubmit = formik.handleSubmit;\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: values.email,\n    onChangeText: handleChange('email'),\n    error: !!emailError,\n    errorText: emailError,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: values.password,\n    onChangeText: handleChange('password'),\n    error: !!passwordError,\n    errorText: passwordError,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/home/fatmach/Documents/VoiceUp/frontend/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","useFormik","Yup","signin","LoginScreen","navigation","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","validationSchema","values","initialValues","onSubmit","console","log","k","registered","then","reset","index","routes","name","formik","errors","handleChange","isSubmitting","handleSubmit","goBack","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {signin} from \"../services/auth.services\"\n\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [passwordError, setPasswordError] = useState('')\n  \n  const validationSchema = (values) => {\n      const emailError = emailValidator(values.email)\n      const passwordError = passwordValidator(values.password)\n      if (emailError || passwordError) {\n        setEmailError(emailError )\n        setPasswordError(passwordError )\n      \n        return \n      }\n    return 1;\n  }\n\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const onSubmit = values => {\n    console.log(values.email);\n    console.log(values.password);\n    const k=validationSchema(values);\n    if (k==1){\n      console.log(\"values.email\");\n\n      const registered = {\n        email: values.email,\n        password: values.password,\n   };\n      signin(registered).then(     \n        navigation.reset({\n          index: 0,\n          routes: [{ name: 'Dashboard' }],\n        })\n        );\n    }\n\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    isSubmitting,\n    handleSubmit,\n  } = formik;\n\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Welcome back.</Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={values.email}\n        onChangeText={handleChange('email')}\n        error={!!emailError}\n        errorText={emailError}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={values.password}\n        onChangeText={handleChange('password')}\n        error={!!passwordError}\n        errorText={passwordError}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={handleSubmit}>\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}