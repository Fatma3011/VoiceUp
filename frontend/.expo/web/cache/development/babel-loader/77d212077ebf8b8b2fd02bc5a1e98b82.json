{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatmach/Documents/VoiceUp/frontend/src/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { useFormik } from 'formik';\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var validationSchema = function validationSchema() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n\n  var initialValues = {\n    email: '',\n    password: ''\n  };\n\n  var onSubmit = function onSubmit(values) {\n    console.log(\"ggg\");\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  });\n  var values = formik.values,\n      touched = formik.touched,\n      errors = formik.errors,\n      handleChange = formik.handleChange,\n      isSubmitting = formik.isSubmitting,\n      isValid = formik.isValid,\n      handleSubmit = formik.handleSubmit;\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: values.email,\n    onChangeText: handleChange('email'),\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: values.email,\n    onChangeText: handleChange('password'),\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/home/fatmach/Documents/VoiceUp/frontend/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","useFormik","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","validationSchema","emailError","passwordError","reset","index","routes","name","initialValues","onSubmit","values","console","log","formik","touched","errors","handleChange","isSubmitting","isValid","handleSubmit","goBack","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport {useFormik} from 'formik';\n\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const validationSchema = () => {\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    navigation.reset({\n      index: 0, \n      routes: [{ name: 'Dashboard' }],\n    })\n  }\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const onSubmit = values => {\n    console.log(\"ggg\");\n    // setTimeout(() => {\n    //   navigation.navigate('Home');\n    // }, 3000);\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    isSubmitting,\n    isValid,\n    handleSubmit,\n  } = formik;\n\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Welcome back.</Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={values.email}\n        onChangeText={handleChange('email')}\n        // {(text) => setEmail({ value: text, error: '' })}\n     \n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={values.email}\n        onChangeText={handleChange('password')}\n        //{(text) => setPassword({ value: text, error: '' })}\n        \n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\n          onPress={handleSubmit}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={handleSubmit}\n      // onPress={onLoginPressed}\n      >\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n   \n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}